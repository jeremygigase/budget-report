{"version":3,"sources":["components/Header.js","components/IncExpForm.js","helpers/cleanupDate.js","components/Item.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["Header","totalIncome","totalExpense","total","className","IncExpForm","incExp","setIncExp","placeholderDesc","placeholderInput","priceName","desc","useRef","date","price","onSubmit","e","preventDefault","d","current","value","split","newD","Date","income","getTime","expense","type","name","id","placeholder","ref","cleanupDate","incomingDate","getDate","getMonth","getFullYear","Item","index","removeIncome","console","log","onClick","List","removeItem","i","temp","filter","v","sort","a","b","map","key","App","useState","setIncome","setTotalIncome","setExpense","setTotalExpense","setTotal","showIncome","setShowIncome","showStats","setShowStats","data","setData","sumIncValuesGroupByDate","input","dates","forEach","dv","parseInt","Object","keys","sumExpValuesGroupByDate","groupByDate","array","reduce","results","item","find","property","push","useEffect","tempIn","tempEx","length","concat","parse","curShowStats","style","cursor","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.68e15e0e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = ({ totalIncome, totalExpense, total }) => {\n  return (\n    <header>\n      <h1>Budget Report</h1>\n      <div className=\"total\">Total €{total}</div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useRef } from \"react\";\n\nconst IncExpForm = ({\n  incExp,\n  setIncExp,\n  placeholderDesc,\n  placeholderInput,\n  priceName,\n}) => {\n  const desc = useRef(null);\n  const date = useRef(null);\n  const price = useRef(null);\n\n  const addIncExp = (e) => {\n    e.preventDefault();\n\n    let d = date.current.value.split(\"-\");\n    let newD = new Date(d[0], d[1] - 1, d[2]);\n\n    if (priceName === \"income\") {\n      setIncExp([\n        ...incExp,\n        {\n          desc: desc.current.value,\n          income: price.current.value,\n          date: newD.getTime(),\n        },\n      ]);\n    } else {\n      setIncExp([\n        ...incExp,\n        {\n          desc: desc.current.value,\n          expense: price.current.value,\n          date: newD.getTime(),\n        },\n      ]);\n    }\n\n    desc.current.value = \"\";\n    price.current.value = null;\n    date.current.value = null;\n  };\n\n  return (\n    <form className=\"income-form\" onSubmit={addIncExp}>\n      <div className=\"form-inner\">\n        <input\n          type=\"text\"\n          name=\"desc\"\n          id=\"desc\"\n          placeholder={placeholderDesc}\n          ref={desc}\n        />\n        <input\n          type=\"number\"\n          name=\"price\"\n          id=\"price\"\n          placeholder=\"Price...\"\n          ref={price}\n        />\n        <input\n          type=\"date\"\n          name=\"date\"\n          id=\"date\"\n          placeholder=\"Income or expense date...\"\n          ref={date}\n        />\n        <input type=\"submit\" value={placeholderInput} />\n      </div>\n    </form>\n  );\n};\n\nexport default IncExpForm;\n","const cleanupDate = (incomingDate) => {\n  let date = new Date(incomingDate);\n  let day = date.getDate();\n  let month = date.getMonth() + 1;\n  let year = date.getFullYear();\n  return day + \"/\" + month + \"/\" + year;\n};\n\nexport default cleanupDate;\n","import React from \"react\";\n\nimport cleanupDate from \"../helpers/cleanupDate\";\n\nconst Item = ({ income, index, removeIncome, price }) => {\n  const removeHandle = (i) => {\n    removeIncome(i);\n  };\n\n  console.log(price);\n\n  return (\n    <div className=\"item\">\n      <button className=\"remove-item\" onClick={() => removeHandle(index)}>\n        x\n      </button>\n      <div className=\"desc\">{income.desc}</div>\n      {price === \"income\" ? (\n        <div className=\"price\">€{income.income}</div>\n      ) : (\n        <div className=\"price\">€{income.expense}</div>\n      )}\n\n      <div className=\"date\">{cleanupDate(income.date)}</div>\n    </div>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./Item\";\n\nconst List = ({ incExp, setIncExp, price }) => {\n  const removeItem = (i) => {\n    let temp = incExp.filter((v, index) => index !== i);\n    setIncExp(temp);\n  };\n\n  const sortByDate = (a, b) => {\n    return a.date - b.date;\n  };\n\n  return (\n    <div className=\"list\">\n      {incExp.sort(sortByDate).map((value, index) => (\n        <Item\n          key={index}\n          income={value}\n          index={index}\n          removeIncome={removeItem}\n          price={price}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useState, useEffect } from \"react\";\n\n// Components\nimport Header from \"./components/Header\";\nimport IncExpForm from \"./components/IncExpForm\";\nimport List from \"./components/List\";\n\n// Helpers\nimport cleanupDate from \"./helpers/cleanupDate\";\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nfunction App() {\n  const [income, setIncome] = useState([]);\n  const [totalIncome, setTotalIncome] = useState(0);\n\n  const [expense, setExpense] = useState([]);\n  const [totalExpense, setTotalExpense] = useState(0);\n\n  const [total, setTotal] = useState(0);\n  const [showIncome, setShowIncome] = useState(true);\n\n  const [showStats, setShowStats] = useState(false);\n\n  const [data, setData] = useState([]);\n\n  function sumIncValuesGroupByDate(input) {\n    let dates = {};\n    input.forEach(\n      (dv) => (dates[dv.date] = (dates[dv.date] || 0) + parseInt(dv.income))\n    );\n    return Object.keys(dates).map((date) => ({ date, income: dates[date] }));\n  }\n\n  function sumExpValuesGroupByDate(input) {\n    let dates = {};\n    input.forEach(\n      (dv) => (dates[dv.date] = (dates[dv.date] || 0) + parseInt(dv.expense))\n    );\n    return Object.keys(dates).map((date) => ({ date, expense: dates[date] }));\n  }\n\n  const groupByDate = (array) =>\n    array.reduce((results, item) => {\n      const current = results.find((i) => i.date === item.date);\n      if (current) {\n        for (let property in item) {\n          if (property !== \"date\") {\n            current[property] = item[property];\n          }\n        }\n      } else {\n        results.push({ ...item });\n      }\n      return results;\n    }, []);\n\n  useEffect(() => {\n    let tempIn = 0;\n    let tempEx = 0;\n    for (let i = 0; i < income.length; i++) {\n      /*sometimes comes through as a string */\n      tempIn += parseInt(income[i].income);\n    }\n\n    for (let i = 0; i < expense.length; i++) {\n      /*sometimes comes through as a string */\n      tempEx += parseInt(expense[i].expense);\n    }\n    setTotal(tempIn - tempEx);\n    setTotalIncome(tempIn);\n    setTotalExpense(tempEx);\n\n    setData(\n      groupByDate(\n        sumIncValuesGroupByDate(income).concat(sumExpValuesGroupByDate(expense))\n      ).map((d) => {\n        const copy = { ...d, date: cleanupDate(Date.parse(d.date)) };\n        return copy;\n      })\n    );\n\n    console.log(\n      groupByDate(\n        sumIncValuesGroupByDate(income).concat(sumExpValuesGroupByDate(expense))\n      ).map((d) => {\n        const copy = { ...d, date: cleanupDate(d.date) };\n        return copy;\n      })\n    );\n  }, [income, expense]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        totalIncome={totalIncome}\n        totalExpense={totalExpense}\n        total={total}\n      />\n\n      <div className=\"buttons\">\n        <div\n          className=\"total stats-button\"\n          onClick={() => {\n            setShowStats((curShowStats) => !curShowStats);\n          }}\n          style={{ cursor: \"pointer\" }}\n        >\n          Statistics\n        </div>\n      </div>\n      {showStats ? (\n        <div className=\"stats-container\">\n          <ResponsiveContainer>\n            <BarChart\n              data={data}\n              margin={{\n                top: 5,\n                right: 30,\n                left: 20,\n                bottom: 5,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"date\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"income\" fill=\"#06d6a0\" />\n              <Bar dataKey=\"expense\" fill=\"#ef476f\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      ) : (\n        <div className=\"stats-container closed\"></div>\n      )}\n\n      <div className=\"buttons\">\n        <div\n          className=\"total income-button\"\n          onClick={() => {\n            setShowIncome(true);\n          }}\n          style={{ cursor: \"pointer\" }}\n        >\n          Income €{totalIncome}\n        </div>\n        <div\n          className=\"total expense-button\"\n          onClick={() => {\n            setShowIncome(false);\n          }}\n          style={{ cursor: \"pointer\" }}\n        >\n          Expenses €{totalExpense}\n        </div>\n      </div>\n\n      {showIncome ? (\n        <div className=\"income-container\">\n          <IncExpForm\n            incExp={income}\n            setIncExp={setIncome}\n            placeholderDesc=\"Income Description...\"\n            placeholderInput=\"Add Income\"\n            priceName=\"income\"\n          />\n          <List incExp={income} setIncExp={setIncome} price=\"income\" />\n        </div>\n      ) : (\n        <div className=\"expense-container\">\n          <IncExpForm\n            incExp={expense}\n            setIncExp={setExpense}\n            placeholderDesc=\"Expense Description...\"\n            placeholderInput=\"Add Expense\"\n            priceName=\"expense\"\n          />\n          <List incExp={expense} setIncExp={setExpense} price=\"expense\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}